version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: fundify-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: fundify
      POSTGRES_USER: fundify
      POSTGRES_PASSWORD: fundify123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fundify"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: fundify-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Rust Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fundify-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      # Application
      RUST_LOG: debug
      HOST: 0.0.0.0
      PORT: 8080

      # Database
      DATABASE_URL: postgresql://fundify:fundify123@postgres:5432/fundify
      DATABASE_MAX_CONNECTIONS: 10
      DATABASE_ACQUIRE_TIMEOUT: 30

      # JWT
      JWT_SECRET: fundify-super-secret-jwt-key-change-in-production-123456789
      JWT_ISSUER: fundify-api
      JWT_AUDIENCE: fundify-users
      JWT_EXPIRATION_SECS: 604800

      # Stripe
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}

      # Supabase
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}

      # Redis
      REDIS_URL: redis://redis:6379

      # CORS
      CORS_ORIGIN: http://localhost:3000
      FRONTEND_URL: http://localhost:3000
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
