version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fundify-postgres
    restart: always
    environment:
      POSTGRES_USER: fundify
      POSTGRES_PASSWORD: fundify123
      POSTGRES_DB: fundify
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U fundify" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: fundify-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend-rs:
    build: .
    container_name: fundify-backend-rs
    restart: always
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://fundify:fundify123@postgres:5432/fundify
      - FRONTEND_URL=http://localhost:3000
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
      - STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret
      - REDIS_URL=redis://redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  adminer:
    image: adminer:latest
    container_name: fundify-adminer
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres

volumes:
  postgres_data:
  redis_data:
